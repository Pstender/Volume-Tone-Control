#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <IRremote.h>

// LCD module
LiquidCrystal_I2C lcd(0x27, 16, 2);

// IR remote
IRrecv irrecv(2);
decode_results results;

// Rotary encoders
#define ENCODER_1_A 3
#define ENCODER_1_B 4
#define ENCODER_2_A 5
#define ENCODER_2_B 6
#define ENCODER_3_A 7
#define ENCODER_3_B 8
#define ENCODER_4_A 9
#define ENCODER_4_B 10

// TDA7439 address
#define TDA7439_ADDR 0x44

// Global variables
int volume = 0;
int bass = 0;
int treble = 0;
int mid = 0;
int channel = 1;

// Function prototypes
void increaseParameter();
void decreaseParameter();
void setTDA7439(byte address, byte value);

void setup() {
  // Initialize LCD
  lcd.begin(16, 2);
  lcd.setCursor(0, 0);
  lcd.print("Audio Control");
  lcd.setCursor(0, 1);
  lcd.print("Volume:       dB");

  // Initialize IR remote
  irrecv.enableIRIn();

  // Initialize rotary encoders
  pinMode(ENCODER_1_A, INPUT_PULLUP);
  pinMode(ENCODER_1_B, INPUT_PULLUP);
  pinMode(ENCODER_2_A, INPUT_PULLUP);
  pinMode(ENCODER_2_B, INPUT_PULLUP);
  pinMode(ENCODER_3_A, INPUT_PULLUP);
  pinMode(ENCODER_3_B, INPUT_PULLUP);
  pinMode(ENCODER_4_A, INPUT_PULLUP);
  pinMode(ENCODER_4_B, INPUT_PULLUP);

  // Set initial parameter values
  bass = 0;
  treble = 0;
  mid = 0;
  setTDA7439(0x00, (byte)volume);   // Set volume
  setTDA7439(0x01, (byte)bass);     // Set bass
  setTDA7439(0x02, (byte)treble);   // Set treble
  setTDA7439(0x03, (byte)mid);      // Set mid
}

void loop() {
  // Read IR remote
  if (irrecv.decode(&results)) {
    switch (results.value) {
      case 0xFF906F:
        // IR remote up button - Switch to the next parameter
        channel++;
        if (channel > 5) channel = 1;
        lcd.setCursor(8, 0);
        lcd.print("          ");
        lcd.setCursor(8, 0);
        switch (channel) {
          case 1:
            lcd.print("Volume");
            break;
          case 2:
            lcd.print("Bass");
            break;
          case 3:
            lcd.print("Treble");
            break;
          case 4:
            lcd.print("Mid");
            break;
          case 5:
            lcd.print("Channel");
            break;
        }
        break;
      case 0xFFA05F:
        // IR remote down button - Switch to the previous parameter
        channel--;
        if (channel < 1) channel = 5;
        lcd.setCursor(8, 0);
        lcd.print("          ");
        lcd.setCursor(8, 0);
        switch (channel) {
          case 1:
            lcd.print("Volume");
            break;
          case 2:
            lcd.print("Bass");
            break;
          case 3:
            lcd.print("Treble");
            break;
          case 4:
            lcd.print("Mid");
            break;
          case 5:
            lcd.print("Channel");
            break;
        }
        break;
      case 0xFFC03F:
        // IR remote left button - Decrease the parameter value
        decreaseParameter();
        break;
      case 0xFFE01F:
        // IR remote right button - Increase the parameter value
        increaseParameter();
        break;
    }
    irrecv.resume();
  }


}

void increaseParameter() {
  switch (channel) {
    case 1:
      volume++;
      if (volume > 100) volume = 100;
      setTDA7439(0x00, (byte)volume);  // Set volume
      lcd.setCursor(9, 1);
      lcd.print("          ");
      lcd.setCursor(9, 1);
      lcd.print(volume);
      break;
    case 2:
      bass++;
      if (bass > 15) bass = 15;
      setTDA7439(0x01, (byte)bass);  // Set bass
      lcd.setCursor(9, 1);
      lcd.print("          ");
      lcd.setCursor(9, 1);
      lcd.print(bass);
      break;
    case 3:
      treble++;
      if (treble > 15) treble = 15;
      setTDA7439(0x02, (byte)treble);  // Set treble
      lcd.setCursor(9, 1);
      lcd.print("          ");
      lcd.setCursor(9, 1);
      lcd.print(treble);
      break;
    case 4:
      mid++;
      if (mid > 15) mid = 15;
      setTDA7439(0x03, (byte)mid);  // Set mid
      lcd.setCursor(9, 1);
      lcd.print("          ");
      lcd.setCursor(9, 1);
      lcd.print(mid);
      break;
    case 5:
 
      break;
  }
  lcd.print(" dB   "); // Display dB unit
}

void decreaseParameter() {
  switch (channel) {
    case 1:
      volume--;
      if (volume < 0) volume = 0;
      setTDA7439(0x00, (byte)volume);  // Set volume
      lcd.setCursor(9, 1);
      lcd.print("          ");
      lcd.setCursor(9, 1);
      lcd.print(volume);
      break;
    case 2:
      bass--;
      if (bass < 0) bass = 0;
      setTDA7439(0x01, (byte)bass);  // Set bass
      lcd.setCursor(9, 1);
      lcd.print("          ");
      lcd.setCursor(9, 1);
      lcd.print(bass);
      break;
    case 3:
      treble--;
      if (treble < 0) treble = 0;
      setTDA7439(0x02, (byte)treble);  // Set treble
      lcd.setCursor(9, 1);
      lcd.print("          ");
      lcd.setCursor(9, 1);
      lcd.print(treble);
      break;
    case 4:
      mid--;
      if (mid < 0) mid = 0;
      setTDA7439(0x03, (byte)mid);  // Set mid
      lcd.setCursor(9, 1);
      lcd.print("          ");
      lcd.setCursor(9, 1);
      lcd.print(mid);
      break;
    case 5:
    
      break;
  }
  lcd.print(" dB   "); // Display dB unit
}

void setTDA7439(byte address, byte value) {
  Wire.beginTransmission(TDA7439_ADDR);
  Wire.write(address);
  Wire.write(value);
  Wire.endTransmission();
}
